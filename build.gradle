plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.4'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '19'

repositories {
    mavenCentral()
}

dependencies {
    // https://mvnrepository.com/artifact/me.paulschwarz/spring-dotenv
    implementation 'me.paulschwarz:spring-dotenv:2.5.4'
    testImplementation 'org.mockito:mockito-core:5.2.0'
    implementation 'org.hibernate:hibernate-validator:6.0.10.Final'
    implementation 'com.auth0:java-jwt:4.2.1'
    testImplementation 'junit:junit:4.13.1'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'org.modelmapper:modelmapper:3.1.0'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.projectlombok:lombok:1.18.22'
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.9'
    implementation group: 'org.springframework', name: 'spring-context', version: '6.0.8'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.24.2'
    testImplementation 'org.awaitility:awaitility:4.2.0'
    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'com.h2database:h2'
}

tasks.named('test') {
    test
}

test {
    exclude '**/CallExternalAPITest.class'
    finalizedBy jacocoTestReport // report is always generated after tests run
    useJUnitPlatform()
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

tasks.withType(Test) {
    testLogging {
        exceptionFormat "full"
        events "started", "skipped", "passed", "failed"
        showStandardStreams true
    }
}

jar {
    archiveBaseName = 'gs-gradle'
    archiveVersion =  '0.1.0'
}