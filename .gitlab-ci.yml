# This file is a template, and might need editing before it works on your project.
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Gradle.gitlab-ci.yml

# This is the Gradle build system for JVM applications
# https://gradle.org/
# https://github.com/gradle/gradle

password-auth:
  services:
    - postgres
  variables:
    # Configure postgres service (https://hub.docker.com/_/postgres/)
    POSTGRES_DB: sportsbook
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: exit
  image: postgres
  script:
    # official way to provide password to psql: http://www.postgresql.org/docs/9.3/static/libpq-envars.html
    - export PGPASSWORD=$POSTGRES_PASSWORD
    - psql -h "postgres" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -c "SELECT 'OK' AS status;"

host-auth:
  services:
    - postgres
  variables:
    # Configure postgres service (https://hub.docker.com/_/postgres/)
    POSTGRES_DB: sportsbook
    POSTGRES_USER: postgres
    POSTGRES_HOST_AUTH_METHOD: trust
  image: postgres
  script:
    - psql -h "postgres" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -c "SELECT 'OK' AS status;"


image: gradle:jdk19-alpine

before_script:
  - GRADLE_USER_HOME="$(pwd)/.gradle"
  - export GRADLE_USER_HOME

build:
  stage: build
  script: gradle --build-cache assemble
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build
      - .gradle

test:
  stage: test
  script: gradle check
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build
      - ./gradlew test

deploy:
  stage: deploy
  script: echo "Define your deployment script!"
  environment: production
